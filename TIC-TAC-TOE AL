import math

# The game board
board = [' ' for _ in range(9)]

def print_board():
    for row in [board[i * 3:(i + 1) * 3] for i in range(3)]:
        print('| ' + ' | '.join(row) + ' |')

def check_winner(board, player):
    win_conditions = [(0, 1, 2), (3, 4, 5), (6, 7, 8), 
                      (0, 3, 6), (1, 4, 7), (2, 5, 8), 
                      (0, 4, 8), (2, 4, 6)]
    for condition in win_conditions:
        if board[condition[0]] == board[condition[1]] == board[condition[2]] == player:
            return True
    return False

def minimax(board, depth, is_maximizing):
    if check_winner(board, 'O'):
        return 1
    elif check_winner(board, 'X'):
        return -1
    elif ' ' not in board:
        return 0
    
    if is_maximizing:
        best_score = -math.inf
        for i in range(9):
            if board[i] == ' ':
                board[i] = 'O'
                score = minimax(board, depth + 1, False)
                board[i] = ' '
                best_score = max(score, best_score)
        return best_score
    else:
        best_score = math.inf
        for i in range(9):
            if board[i] == ' ':
                board[i] = 'X'
                score = minimax(board, depth + 1, True)
                board[i] = ' '
                best_score = min(score, best_score)
        return best_score

def best_move():
    best_score = -math.inf
    move = 0
    for i in range(9):
        if board[i] == ' ':
            board[i] = 'O'
            score = minimax(board, 0, False)
            board[i] = ' '
            if score > best_score:
                best_score = score
                move = i
    return move

def main():
    print("Welcome to Tic-Tac-Toe!")
    print_board()

    while ' ' in board:
        # Player move
        try:
            move = int(input("Enter your move (1-9): ")) - 1
            if board[move] != ' ':
                print("Invalid move, try again.")
                continue
        except (ValueError, IndexError):
            print("Invalid input, please enter a number between 1 and 9.")
            continue
        
        board[move] = 'X'
        print_board()

        if check_winner(board, 'X'):
            print("Congratulations! You won!")
            return
        
        # AI move
        if ' ' in board:
            print("AI's turn:")
            ai_move = best_move()
            board[ai_move] = 'O'
            print_board()

            if check_winner(board, 'O'):
                print("AI wins! Better luck next time.")
                return
    
    print("It's a tie!")

if __name__ == "__main__":
    main()
